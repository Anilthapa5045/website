<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta property="og:url"                content="https://ballerinalang.org" />
  <meta property="og:type"               content="article" />
  <meta property="og:title"              content="Flexible. Powerful. Beautiful." />
  <meta property="og:description"        content="Ballerina by Example is a hands-on introduction to Ballerina using annotated example programs. Check out the first example or browse the full list below. " />
  <meta property="og:image"              content="http://ballerinalang.org/img/ballerina-fb.jpg" />
    <link rel="shortcut icon" href="https://ballerinalang.org/img/favicon.ico" type="image/x-icon">
  <link rel="icon" href="https://ballerinalang.org/img/favicon.ico" type="image/x-icon">
    <title>Ballerina by Example: Transform JSON</title>
    <!--GA-->
      <script>
         (function (i, s, o, g, r, a, m) {
             i['GoogleAnalyticsObject'] = r;
             i[r] = i[r] || function () {
                 (i[r].q = i[r].q || []).push(arguments)
             }, i[r].l = 1 * new Date();
             a = s.createElement(o),
                     m = s.getElementsByTagName(o)[0];
             a.async = 1;
             a.src = g;
             m.parentNode.insertBefore(a, m)
         })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');
         
         ga('create', 'UA-92163714-1', 'auto');
         ga('send', 'pageview');
         
      </script>
      <!-- Google Tag Manager -->
      <script>(function (w, d, s, l, i) {
         w[l] = w[l] || [];
         w[l].push({'gtm.start':
                     new Date().getTime(), event: 'gtm.js'});
         var f = d.getElementsByTagName(s)[0],
                 j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : '';
         j.async = true;
         j.src =
                 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
         f.parentNode.insertBefore(j, f);
         })(window, document, 'script', 'dataLayer', 'GTM-KW2LLTW');
      </script>
      <!-- End Google Tag Manager -->
      <!-- Hotjar Tracking Code for https://ballerinalang.org/ --> 
      <script>
         (function (h, o, t, j, a, r) {
             h.hj = h.hj || function () {
                 (h.hj.q = h.hj.q || []).push(arguments)
             };
             h._hjSettings = {hjid: 442732, hjsv: 5};
             a = o.getElementsByTagName('head')[0];
             r = o.createElement('script');
             r.async = 1;
             r.src = t + h._hjSettings.hjid + j + h._hjSettings.hjsv;
             a.appendChild(r);
         })(window, document, '//static.hotjar.com/c/hotjar-', '.js?sv=');
      </script>
    
     <link href="https://b.content.wso2.com/sites/all/bootstrap/css/bootstrap.css?230617" rel="stylesheet">
      <script src="https://b.content.wso2.com/sites/all/bootstrap/js/jquery.js?230617"></script>
      <script src="https://b.content.wso2.com/sites/all/bootstrap/js/bootstrap.js?230617"></script>
      
      <script src="https://b.content.wso2.com/sites/all/ballerina/ballerina-example.js"></script>
<script  defer="defer" src="https://wso2.cachefly.net/wso2/sites/all/ballerina/js/ballerina.js"></script>
    <link rel=stylesheet href="site.css">
    <link href="https://fonts.googleapis.com/css?family=Cairo:200,300,400,600,700,900" rel="stylesheet">
    <link rel=stylesheet href="https://b.content.wso2.com/sites/all/ballerina/ballerina-example.css">
    
    
  </head>
  <body>
        <div class="row cBallerinaNav" id="iBallerinaNavigation">

        </div>
      <div class="row cBallerinaBySampleRow">
          <div class="container cBallerinaBySampleContainer">
			  <div class="FullCode">
			  	<div class="highlight"><pre><span class="kn">import</span> <span class="nx">ballerina</span><span class="p">.</span><span class="nx">net</span><span class="p">.</span><span class="nx">http</span><span class="p">;</span>
<span class="kd">struct</span> <span class="nx">Person</span> <span class="p">{</span>
    <span class="kt">string</span> <span class="nx">name</span><span class="p">;</span>
    <span class="kt">int</span> <span class="nx">age</span><span class="p">;</span>
    <span class="kt">string</span> <span class="nx">city</span><span class="p">;</span>
<span class="p">}</span><span class="nd">@http:configuration {</span>
    <span class="nx">basePath</span><span class="p">:</span><span class="s">&quot;/person&quot;</span>
<span class="p">}</span>
<span class="kd">service</span><span class="p">&lt;</span><span class="nx">http</span><span class="p">&gt;</span> <span class="nx">PersonService</span> <span class="p">{</span>    <span class="nd">@http:resourceConfig {</span>
        <span class="nx">methods</span><span class="p">:[</span><span class="s">&quot;POST&quot;</span><span class="p">],</span>
        <span class="nx">path</span><span class="p">:</span><span class="s">&quot;/&quot;</span>
    <span class="p">}</span>
    <span class="kd">resource</span> <span class="nx">getPerson</span> <span class="p">(</span><span class="nx">http</span><span class="p">:</span><span class="nx">Request</span> <span class="nx">req</span><span class="p">,</span> <span class="nx">http</span><span class="p">:</span><span class="nx">Response</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">json</span> <span class="nx">j</span> <span class="p">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">getJsonPayload</span><span class="p">();</span>
        <span class="nx">Person</span> <span class="nx">p</span><span class="p">;</span>
        <span class="nx">TypeConversionError</span> <span class="nx">err</span><span class="p">;</span>
        <span class="nx">p</span><span class="p">,</span> <span class="nx">err</span> <span class="p">=</span> <span class="p">&lt;</span><span class="nx">Person</span><span class="p">&gt;</span><span class="nx">j</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">err</span> <span class="o">!=</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
            <span class="nb">println</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="kt">string</span> <span class="nx">city</span> <span class="p">=</span> <span class="s">&quot;London&quot;</span><span class="p">;</span>
        <span class="kt">json</span><span class="p">&lt;</span><span class="nx">Person</span><span class="p">&gt;</span> <span class="nx">response</span> <span class="p">=</span> <span class="p">{};</span>
        <span class="nx">transform</span> <span class="p">{</span>
            <span class="nx">response</span><span class="p">.</span><span class="nx">name</span> <span class="p">=</span> <span class="nx">p</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span>
            <span class="nx">response</span><span class="p">.</span><span class="nx">age</span> <span class="p">=</span> <span class="nx">p</span><span class="p">.</span><span class="nx">age</span><span class="p">;</span>
            <span class="nx">response</span><span class="p">.</span><span class="nx">city</span> <span class="p">=</span> <span class="nx">city</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="nx">res</span><span class="p">.</span><span class="nx">setJsonPayload</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span>
        <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">();</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>

		  	  </div>	
              <div class="example" id="transform-json">
                  <div class="col-xs-11 col-sm-11 col-md-11">
                      <h2><a href="./">Ballerina by Example</a>: Transform JSON</h2>
                  </div>
                  <div class="col-xs-1 col-sm-1 col-md-1">
                      <a href="./" class="cBackButton"><img src="http://b.content.wso2.com/sites/all/ballerina/backbutton.svg"/></a>
                  </div>
                  <div class="col-xs-12 col-sm-12 col-md-12">

                      

                      <table>
                          
                          <tr>
                              <td class="docs">
                                  <p>Transform statement is used to transform any chosen variable(s) or argument(s),
 using data from other variable(s) or argument(s). The variable(s) or argument(s)
 getting changed are known as output and variable(s) or argument(s) that supply values
 for output is known as input. Transform statements is a set of assignments which
 make up the transformation from input to output. This sample is about transforming
 an input struct variable to an output &lsquo;json&rsquo; variable which is constraint by a struct type.</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre><span class="kn">import</span> <span class="nx">ballerina</span><span class="p">.</span><span class="nx">net</span><span class="p">.</span><span class="nx">http</span><span class="p">;</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Defining Person struct.</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre><span class="kd">struct</span> <span class="nx">Person</span> <span class="p">{</span>
    <span class="kt">string</span> <span class="nx">name</span><span class="p">;</span>
    <span class="kt">int</span> <span class="nx">age</span><span class="p">;</span>
    <span class="kt">string</span> <span class="nx">city</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  
                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre><span class="nd">@http:configuration {</span>
    <span class="nx">basePath</span><span class="p">:</span><span class="s">&quot;/person&quot;</span>
<span class="p">}</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Defining Person service which provides person details.</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre><span class="kd">service</span><span class="p">&lt;</span><span class="nx">http</span><span class="p">&gt;</span> <span class="nx">PersonService</span> <span class="p">{</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  
                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>    <span class="nd">@http:resourceConfig {</span>
        <span class="nx">methods</span><span class="p">:[</span><span class="s">&quot;POST&quot;</span><span class="p">],</span>
        <span class="nx">path</span><span class="p">:</span><span class="s">&quot;/&quot;</span>
    <span class="p">}</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Defining POST resource for the service to get person details.</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>    <span class="kd">resource</span> <span class="nx">getPerson</span> <span class="p">(</span><span class="nx">http</span><span class="p">:</span><span class="nx">Request</span> <span class="nx">req</span><span class="p">,</span> <span class="nx">http</span><span class="p">:</span><span class="nx">Response</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Get the JSON payload from the request</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>        <span class="kt">json</span> <span class="nx">j</span> <span class="p">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">getJsonPayload</span><span class="p">();</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Declare a Person variable</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>        <span class="nx">Person</span> <span class="nx">p</span><span class="p">;</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Declare a type conversion error to accept any type conversion errors thrown</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>        <span class="nx">TypeConversionError</span> <span class="nx">err</span><span class="p">;</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Convert JSON to a Person type variable</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>        <span class="nx">p</span><span class="p">,</span> <span class="nx">err</span> <span class="p">=</span> <span class="p">&lt;</span><span class="nx">Person</span><span class="p">&gt;</span><span class="nx">j</span><span class="p">;</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Print if an error is thrown</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>        <span class="k">if</span> <span class="p">(</span><span class="nx">err</span> <span class="o">!=</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
            <span class="nb">println</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>
        <span class="p">}</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Define a constant city value as &ldquo;London&rdquo;.</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>        <span class="kt">string</span> <span class="nx">city</span> <span class="p">=</span> <span class="s">&quot;London&quot;</span><span class="p">;</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Create a new json variable constrained by Person struct.</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>        <span class="kt">json</span><span class="p">&lt;</span><span class="nx">Person</span><span class="p">&gt;</span> <span class="nx">response</span> <span class="p">=</span> <span class="p">{};</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Use p, Person variable as input to transform fields of response JSON which is the output.</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>        <span class="nx">transform</span> <span class="p">{</span>
            <span class="nx">response</span><span class="p">.</span><span class="nx">name</span> <span class="p">=</span> <span class="nx">p</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span>
            <span class="nx">response</span><span class="p">.</span><span class="nx">age</span> <span class="p">=</span> <span class="nx">p</span><span class="p">.</span><span class="nx">age</span><span class="p">;</span>
            <span class="nx">response</span><span class="p">.</span><span class="nx">city</span> <span class="p">=</span> <span class="nx">city</span><span class="p">;</span>
        <span class="p">}</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Set the new JSON payload to the message</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>        <span class="nx">res</span><span class="p">.</span><span class="nx">setJsonPayload</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Reply from the resource with message m.</p>

                              </td>
                              <td class="code">
                                  <div class="highlight"><pre>        <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">();</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>

                              </td>
                          </tr>
                          
                      </table>
					 

                      

                      <table>
                          
                          <tr>
                              <td class="docs">
                                  <p>To start the service, put the code in &ldquo;transform-json.bal&rdquo;
 and use &ldquo;ballerina run&rdquo; command.</p>

                              </td>
                              <td class="code">
                                  <div class="highlight"><pre><span class="gp">$</span> ballerina run transform-json.bal
<span class="go">ballerina: deploying service(s) in &#39;transform-json.bal&#39;</span>
<span class="go">ballerina: started HTTP/WS server connector 0.0.0.0:9090</span>
</pre></div>

                              </td>
                          </tr>
                          
                      </table>
					 

                      

                      <table>
                          
                          <tr>
                              <td class="docs">
                                  <p>Invoke the service using &ldquo;curl&rdquo;.</p>

                              </td>
                              <td class="code">
                                  <div class="highlight"><pre><span class="gp">$</span> curl -H <span class="s2">&quot;Content-Type: application/json&quot;</span> -X POST -d <span class="s1">&#39;{&quot;name&quot;:&quot;Ann&quot;, &quot;age&quot;: 30 ,&quot;city&quot;:&quot;New York&quot;}&#39;</span> http://localhost:9090/person/
<span class="go">{&quot;name&quot;:&quot;Ann&quot;,&quot;age&quot;:30,&quot;city&quot;:&quot;London&quot;}</span>
</pre></div>

                              </td>
                          </tr>
                          
                      </table>
					 

                      
                      
                      <p class="next">
                          Next example: <a href="strings">Strings</a>.
                      </p>
                      

                  </div>
                  <div class="col-xs-12 col-sm-12 col-md-12 cGOfooter">
                      <p class="footer">
                          by <a href="https://twitter.com/ballerinalang">@ballerinalang</a> | <a href="mailto:ballerina-dev@googlegroups.com">feedback</a> | <a href="https://github.com/ballerinalang/ballerina/tree/master/samples/ballerina-by-example/examples/transform-json">source</a>
                      </p>
                      <p class="attrib">
                          This site was generated using a <a href="https://github.com/mmcgrana/gobyexample/">tool</a> developed by <a href="https://twitter.com/mmcgrana">@mmcgrana</a>, licensed under <a href="https://creativecommons.org/licenses/by/2.0/">CC BY</a> / modified from original
                      </p>
                  </div>
              </div>
              
          </div>
      </div>
      <div class="row cBallerinaFooter" id="iBallerinaFooter">
      </div>
	    
  </body>
</html>
