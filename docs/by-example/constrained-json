<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta property="og:url"                content="https://ballerinalang.org" />
  <meta property="og:type"               content="article" />
  <meta property="og:title"              content="Flexible. Powerful. Beautiful." />
  <meta property="og:description"        content="Ballerina by Example is a hands-on introduction to Ballerina using annotated example programs. Check out the first example or browse the full list below. " />
  <meta property="og:image"              content="http://ballerinalang.org/img/ballerina-fb.jpg" />
    <link rel="shortcut icon" href="https://ballerinalang.org/img/favicon.ico" type="image/x-icon">
  <link rel="icon" href="https://ballerinalang.org/img/favicon.ico" type="image/x-icon">
    <title>Ballerina by Example: Constrained JSON</title>
    <!--GA-->
      <script>
         (function (i, s, o, g, r, a, m) {
             i['GoogleAnalyticsObject'] = r;
             i[r] = i[r] || function () {
                 (i[r].q = i[r].q || []).push(arguments)
             }, i[r].l = 1 * new Date();
             a = s.createElement(o),
                     m = s.getElementsByTagName(o)[0];
             a.async = 1;
             a.src = g;
             m.parentNode.insertBefore(a, m)
         })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');
         
         ga('create', 'UA-92163714-1', 'auto');
         ga('send', 'pageview');
         
      </script>
      <!-- Google Tag Manager -->
      <script>(function (w, d, s, l, i) {
         w[l] = w[l] || [];
         w[l].push({'gtm.start':
                     new Date().getTime(), event: 'gtm.js'});
         var f = d.getElementsByTagName(s)[0],
                 j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : '';
         j.async = true;
         j.src =
                 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
         f.parentNode.insertBefore(j, f);
         })(window, document, 'script', 'dataLayer', 'GTM-KW2LLTW');
      </script>
      <!-- End Google Tag Manager -->
      <!-- Hotjar Tracking Code for https://ballerinalang.org/ --> 
      <script>
         (function (h, o, t, j, a, r) {
             h.hj = h.hj || function () {
                 (h.hj.q = h.hj.q || []).push(arguments)
             };
             h._hjSettings = {hjid: 442732, hjsv: 5};
             a = o.getElementsByTagName('head')[0];
             r = o.createElement('script');
             r.async = 1;
             r.src = t + h._hjSettings.hjid + j + h._hjSettings.hjsv;
             a.appendChild(r);
         })(window, document, '//static.hotjar.com/c/hotjar-', '.js?sv=');
      </script>
    
     <link href="https://b.content.wso2.com/sites/all/bootstrap/css/bootstrap.css?230617" rel="stylesheet">
      <script src="https://b.content.wso2.com/sites/all/bootstrap/js/jquery.js?230617"></script>
      <script src="https://b.content.wso2.com/sites/all/bootstrap/js/bootstrap.js?230617"></script>
      
      <script src="https://b.content.wso2.com/sites/all/ballerina/ballerina-example.js"></script>
<script  defer="defer" src="https://wso2.cachefly.net/wso2/sites/all/ballerina/js/ballerina.js"></script>
    <link rel=stylesheet href="site.css">
    <link href="https://fonts.googleapis.com/css?family=Cairo:200,300,400,600,700,900" rel="stylesheet">
    <link rel=stylesheet href="https://b.content.wso2.com/sites/all/ballerina/ballerina-example.css">
    
    
  </head>
  <body>
        <div class="row cBallerinaNav" id="iBallerinaNavigation">

        </div>
      <div class="row cBallerinaBySampleRow">
          <div class="container cBallerinaBySampleContainer">
			  <div class="FullCode">
			  	<div class="highlight"><pre><span class="kn">import</span> <span class="nx">ballerina</span><span class="p">.</span><span class="nx">net</span><span class="p">.</span><span class="nx">http</span><span class="p">;</span>
<span class="kn">import</span> <span class="nx">ballerina</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">messages</span><span class="p">;</span>
<span class="kn">import</span> <span class="nx">ballerina</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">strings</span><span class="p">;</span><span class="nd">@doc:Description {</span>
    <span class="nx">value</span><span class="p">:</span> <span class="s">&quot;Defining people array&quot;</span>
<span class="p">}</span>
<span class="nx">Person</span><span class="p">[]</span> <span class="nx">people</span> <span class="p">=</span> <span class="p">[{</span><span class="nx">name</span><span class="p">:</span> <span class="s">&quot;Ann Frank&quot;</span><span class="p">,</span> <span class="nx">age</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span> <span class="nx">city</span><span class="p">:</span> <span class="s">&quot;London&quot;</span><span class="p">},</span>
                   <span class="p">{</span><span class="nx">name</span><span class="p">:</span> <span class="s">&quot;Tim Yank&quot;</span><span class="p">,</span> <span class="nx">age</span><span class="p">:</span> <span class="mi">20</span><span class="p">,</span> <span class="nx">city</span><span class="p">:</span> <span class="s">&quot;New York&quot;</span><span class="p">},</span>
                   <span class="p">{</span><span class="nx">name</span><span class="p">:</span> <span class="s">&quot;John Grisham&quot;</span><span class="p">,</span> <span class="nx">age</span><span class="p">:</span> <span class="mi">25</span><span class="p">,</span> <span class="nx">city</span><span class="p">:</span> <span class="s">&quot;Brisbane&quot;</span><span class="p">},</span>
                   <span class="p">{</span><span class="nx">name</span><span class="p">:</span> <span class="s">&quot;Sarah Paulin&quot;</span><span class="p">,</span> <span class="nx">age</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="nx">city</span><span class="p">:</span> <span class="s">&quot;Chicago&quot;</span><span class="p">},</span>
                   <span class="p">{</span><span class="nx">name</span><span class="p">:</span> <span class="s">&quot;Trevor Noah&quot;</span><span class="p">,</span> <span class="nx">age</span><span class="p">:</span> <span class="mi">45</span><span class="p">,</span> <span class="nx">city</span><span class="p">:</span> <span class="s">&quot;Cape Town&quot;</span><span class="p">}];</span><span class="nd">@doc:Description {</span>
    <span class="nx">value</span><span class="p">:</span> <span class="s">&quot;Defining Person struct&quot;</span>
<span class="p">}</span>
<span class="kd">struct</span> <span class="nx">Person</span> <span class="p">{</span>
    <span class="kt">string</span> <span class="nx">name</span><span class="p">;</span>
    <span class="kt">int</span> <span class="nx">age</span><span class="p">;</span>
    <span class="kt">string</span> <span class="nx">city</span><span class="p">;</span>
<span class="p">}</span><span class="kd">struct</span> <span class="nx">Employee</span> <span class="p">{</span>
    <span class="kt">string</span> <span class="nx">first_name</span><span class="p">;</span>
    <span class="kt">string</span> <span class="nx">last_name</span><span class="p">;</span>
    <span class="kt">int</span> <span class="nx">age</span><span class="p">;</span>
    <span class="kt">string</span> <span class="nx">address</span><span class="p">;</span>
<span class="p">}</span><span class="nd">@http:configuration {</span>
    <span class="nx">basePath</span><span class="p">:</span> <span class="s">&quot;/people&quot;</span>
<span class="p">}</span>
<span class="nd">@doc:Description {</span>
    <span class="nx">value</span><span class="p">:</span> <span class="s">&quot;Define people management service which can be accessed with /people&quot;</span>
<span class="p">}</span>
<span class="kd">service</span><span class="p">&lt;</span><span class="nx">http</span><span class="p">&gt;</span> <span class="nx">PeopleManagementService</span> <span class="p">{</span>    <span class="nd">@http:resourceConfig {</span>
        <span class="nx">methods</span><span class="p">:[</span><span class="s">&quot;GET&quot;</span><span class="p">],</span>
        <span class="nx">path</span><span class="p">:</span><span class="s">&quot;/employee/&quot;</span>
    <span class="p">}</span>
    <span class="nd">@doc:Description {</span>
        <span class="nx">value</span><span class="p">:</span> <span class="s">&quot;Resource to get employee for the person by index which&quot;</span> <span class="o">+</span>
        <span class="s">&quot; can be invoked with /people/employee?index={index}&quot;</span>
    <span class="p">}</span>
    <span class="kd">resource</span> <span class="nx">getEmployee</span> <span class="p">(</span><span class="kt">message</span> <span class="nx">m</span><span class="p">,</span> <span class="nd">@http:QueryParam {</span><span class="nx">value</span><span class="p">:</span><span class="s">&quot;index&quot;</span><span class="p">}</span>
                                     <span class="kt">int</span> <span class="nx">index</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">json</span><span class="p">&lt;</span><span class="nx">Employee</span><span class="p">&gt;</span> <span class="nx">employeeJson</span> <span class="p">=</span> <span class="p">{};</span>
        <span class="nx">transform</span> <span class="p">{</span>
            <span class="kt">string</span><span class="p">[]</span> <span class="nx">_temp</span> <span class="p">=</span> <span class="nx">strings</span><span class="p">:</span><span class="nx">split</span><span class="p">(</span><span class="nx">people</span><span class="p">[</span><span class="nx">index</span><span class="p">].</span><span class="nx">name</span><span class="p">,</span> <span class="s">&quot; &quot;</span><span class="p">);</span>
            <span class="nx">employeeJson</span><span class="p">.</span><span class="nx">first_name</span> <span class="p">=</span> <span class="nx">_temp</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
            <span class="nx">employeeJson</span><span class="p">.</span><span class="nx">last_name</span> <span class="p">=</span> <span class="nx">_temp</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
            <span class="nx">employeeJson</span><span class="p">.</span><span class="nx">age</span> <span class="p">=</span> <span class="nx">people</span><span class="p">[</span><span class="nx">index</span><span class="p">].</span><span class="nx">age</span><span class="p">;</span>
            <span class="nx">employeeJson</span><span class="p">.</span><span class="nx">address</span> <span class="p">=</span> <span class="nx">people</span><span class="p">[</span><span class="nx">index</span><span class="p">].</span><span class="nx">city</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="nx">messages</span><span class="p">:</span><span class="nx">setJsonPayload</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span> <span class="nx">employeeJson</span><span class="p">);</span>
        <span class="nx">reply</span> <span class="nx">m</span><span class="p">;</span>
    <span class="p">}</span>    <span class="nd">@http:resourceConfig {</span>
        <span class="nx">methods</span><span class="p">:[</span><span class="s">&quot;POST&quot;</span><span class="p">],</span>
        <span class="nx">path</span><span class="p">:</span><span class="s">&quot;/update&quot;</span>
    <span class="p">}</span>
    <span class="nd">@doc:Description {</span>
        <span class="nx">value</span><span class="p">:</span> <span class="s">&quot;Resource to update person by index which can be invoked with &quot;</span> <span class="o">+</span>
        <span class="s">&quot;/people/update?index={index}&quot;</span>
    <span class="p">}</span>
    <span class="kd">resource</span> <span class="nx">updatePerson</span> <span class="p">(</span><span class="kt">message</span> <span class="nx">m</span><span class="p">,</span> <span class="nd">@http:QueryParam{</span><span class="nx">value</span><span class="p">:</span><span class="s">&quot;index&quot;</span><span class="p">}</span>
                                      <span class="kt">int</span> <span class="nx">index</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">json</span> <span class="nx">j</span> <span class="p">=</span> <span class="nx">messages</span><span class="p">:</span><span class="nx">getJsonPayload</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span>
        <span class="k">var</span> <span class="nx">jsonPerson</span><span class="p">,</span> <span class="nx">_</span> <span class="p">=</span> <span class="p">(</span><span class="kt">json</span><span class="p">&lt;</span><span class="nx">Person</span><span class="p">&gt;)</span><span class="nx">j</span><span class="p">;</span>        <span class="nx">transform</span> <span class="p">{</span>
            <span class="nx">people</span><span class="p">[</span><span class="nx">index</span><span class="p">].</span><span class="nx">name</span><span class="p">,</span> <span class="nx">_</span> <span class="p">=</span> <span class="p">(</span><span class="kt">string</span><span class="p">)</span> <span class="nx">jsonPerson</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span>
            <span class="nx">people</span><span class="p">[</span><span class="nx">index</span><span class="p">].</span><span class="nx">age</span><span class="p">,</span> <span class="nx">_</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span> <span class="nx">jsonPerson</span><span class="p">.</span><span class="nx">age</span><span class="p">;</span>
            <span class="nx">people</span><span class="p">[</span><span class="nx">index</span><span class="p">].</span><span class="nx">city</span><span class="p">,</span> <span class="nx">_</span> <span class="p">=</span> <span class="p">(</span><span class="kt">string</span><span class="p">)</span> <span class="nx">jsonPerson</span><span class="p">.</span><span class="nx">city</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="nx">m</span> <span class="p">=</span> <span class="p">{};</span>
        <span class="nx">http</span><span class="p">:</span><span class="nx">setStatusCode</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span> <span class="mi">202</span><span class="p">);</span>
        <span class="nx">reply</span> <span class="nx">m</span><span class="p">;</span>
    <span class="p">}</span>    <span class="nd">@http:resourceConfig {</span>
        <span class="nx">methods</span><span class="p">:[</span><span class="s">&quot;GET&quot;</span><span class="p">],</span>
        <span class="nx">path</span><span class="p">:</span><span class="s">&quot;/&quot;</span>
    <span class="p">}</span>
    <span class="nd">@doc:Description {</span>
        <span class="nx">value</span><span class="p">:</span> <span class="s">&quot;Get all people which can be invoked as /people/&quot;</span>
    <span class="p">}</span>
    <span class="kd">resource</span> <span class="nx">GetPeople</span> <span class="p">(</span><span class="kt">message</span> <span class="nx">m</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">json</span> <span class="nx">jsonResponse</span> <span class="p">=</span> <span class="p">[];</span>
        <span class="kt">int</span> <span class="nx">index</span> <span class="p">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">while</span> <span class="p">(</span><span class="nx">index</span> <span class="p">&lt;</span> <span class="nx">people</span><span class="p">.</span><span class="nx">length</span> <span class="p">)</span> <span class="p">{</span>
            <span class="nx">jsonResponse</span><span class="p">[</span><span class="nx">index</span><span class="p">],</span> <span class="nx">_</span> <span class="p">=</span> <span class="p">&lt;</span><span class="kt">json</span><span class="p">&gt;</span> <span class="nx">people</span><span class="p">[</span><span class="nx">index</span><span class="p">];</span>
            <span class="nx">index</span> <span class="p">=</span> <span class="nx">index</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="nx">messages</span><span class="p">:</span><span class="nx">setJsonPayload</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span> <span class="nx">jsonResponse</span><span class="p">);</span>
        <span class="nx">reply</span> <span class="nx">m</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>

		  	  </div>	
              <div class="example" id="constrained-json">
                  <div class="col-xs-11 col-sm-11 col-md-11">
                      <h2><a href="./">Ballerina by Example</a>: Constrained JSON</h2>
                  </div>
                  <div class="col-xs-1 col-sm-1 col-md-1">
                      <a href="./" class="cBackButton"><img src="http://b.content.wso2.com/sites/all/ballerina/backbutton.svg"/></a>
                  </div>
                  <div class="col-xs-12 col-sm-12 col-md-12">

                      

                      <table>
                          
                          <tr>
                              <td class="docs">
                                  <p>A json can be constrained with a struct definition to restrict the fields of the json to that of the
 struct. If tried to access a field with an invalid field as per the struct definition or initialize
 a json with invalid fields, this will cause a semantic error. Restricting the fields of the json will
 enforce the format of the json variable.</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre><span class="kn">import</span> <span class="nx">ballerina</span><span class="p">.</span><span class="nx">net</span><span class="p">.</span><span class="nx">http</span><span class="p">;</span>
<span class="kn">import</span> <span class="nx">ballerina</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">messages</span><span class="p">;</span>
<span class="kn">import</span> <span class="nx">ballerina</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">strings</span><span class="p">;</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  
                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre><span class="nd">@doc:Description {</span>
    <span class="nx">value</span><span class="p">:</span> <span class="s">&quot;Defining people array&quot;</span>
<span class="p">}</span>
<span class="nx">Person</span><span class="p">[]</span> <span class="nx">people</span> <span class="p">=</span> <span class="p">[{</span><span class="nx">name</span><span class="p">:</span> <span class="s">&quot;Ann Frank&quot;</span><span class="p">,</span> <span class="nx">age</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span> <span class="nx">city</span><span class="p">:</span> <span class="s">&quot;London&quot;</span><span class="p">},</span>
                   <span class="p">{</span><span class="nx">name</span><span class="p">:</span> <span class="s">&quot;Tim Yank&quot;</span><span class="p">,</span> <span class="nx">age</span><span class="p">:</span> <span class="mi">20</span><span class="p">,</span> <span class="nx">city</span><span class="p">:</span> <span class="s">&quot;New York&quot;</span><span class="p">},</span>
                   <span class="p">{</span><span class="nx">name</span><span class="p">:</span> <span class="s">&quot;John Grisham&quot;</span><span class="p">,</span> <span class="nx">age</span><span class="p">:</span> <span class="mi">25</span><span class="p">,</span> <span class="nx">city</span><span class="p">:</span> <span class="s">&quot;Brisbane&quot;</span><span class="p">},</span>
                   <span class="p">{</span><span class="nx">name</span><span class="p">:</span> <span class="s">&quot;Sarah Paulin&quot;</span><span class="p">,</span> <span class="nx">age</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="nx">city</span><span class="p">:</span> <span class="s">&quot;Chicago&quot;</span><span class="p">},</span>
                   <span class="p">{</span><span class="nx">name</span><span class="p">:</span> <span class="s">&quot;Trevor Noah&quot;</span><span class="p">,</span> <span class="nx">age</span><span class="p">:</span> <span class="mi">45</span><span class="p">,</span> <span class="nx">city</span><span class="p">:</span> <span class="s">&quot;Cape Town&quot;</span><span class="p">}];</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  
                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre><span class="nd">@doc:Description {</span>
    <span class="nx">value</span><span class="p">:</span> <span class="s">&quot;Defining Person struct&quot;</span>
<span class="p">}</span>
<span class="kd">struct</span> <span class="nx">Person</span> <span class="p">{</span>
    <span class="kt">string</span> <span class="nx">name</span><span class="p">;</span>
    <span class="kt">int</span> <span class="nx">age</span><span class="p">;</span>
    <span class="kt">string</span> <span class="nx">city</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  
                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre><span class="kd">struct</span> <span class="nx">Employee</span> <span class="p">{</span>
    <span class="kt">string</span> <span class="nx">first_name</span><span class="p">;</span>
    <span class="kt">string</span> <span class="nx">last_name</span><span class="p">;</span>
    <span class="kt">int</span> <span class="nx">age</span><span class="p">;</span>
    <span class="kt">string</span> <span class="nx">address</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  
                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre><span class="nd">@http:configuration {</span>
    <span class="nx">basePath</span><span class="p">:</span> <span class="s">&quot;/people&quot;</span>
<span class="p">}</span>
<span class="nd">@doc:Description {</span>
    <span class="nx">value</span><span class="p">:</span> <span class="s">&quot;Define people management service which can be accessed with /people&quot;</span>
<span class="p">}</span>
<span class="kd">service</span><span class="p">&lt;</span><span class="nx">http</span><span class="p">&gt;</span> <span class="nx">PeopleManagementService</span> <span class="p">{</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  
                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>    <span class="nd">@http:resourceConfig {</span>
        <span class="nx">methods</span><span class="p">:[</span><span class="s">&quot;GET&quot;</span><span class="p">],</span>
        <span class="nx">path</span><span class="p">:</span><span class="s">&quot;/employee/&quot;</span>
    <span class="p">}</span>
    <span class="nd">@doc:Description {</span>
        <span class="nx">value</span><span class="p">:</span> <span class="s">&quot;Resource to get employee for the person by index which&quot;</span> <span class="o">+</span>
        <span class="s">&quot; can be invoked with /people/employee?index={index}&quot;</span>
    <span class="p">}</span>
    <span class="kd">resource</span> <span class="nx">getEmployee</span> <span class="p">(</span><span class="kt">message</span> <span class="nx">m</span><span class="p">,</span> <span class="nd">@http:QueryParam {</span><span class="nx">value</span><span class="p">:</span><span class="s">&quot;index&quot;</span><span class="p">}</span>
                                     <span class="kt">int</span> <span class="nx">index</span><span class="p">)</span> <span class="p">{</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Define a struct constrained by Employee struct. With this constraint, the json, employeeJson can only
 contain the fields of Employee struct</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>        <span class="kt">json</span><span class="p">&lt;</span><span class="nx">Employee</span><span class="p">&gt;</span> <span class="nx">employeeJson</span> <span class="p">=</span> <span class="p">{};</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Transform statement to construct the employeeJson json with Person with the given index from the people array</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>        <span class="nx">transform</span> <span class="p">{</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>split name from &ldquo; &rdquo; to separate first and last names</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>            <span class="kt">string</span><span class="p">[]</span> <span class="nx">_temp</span> <span class="p">=</span> <span class="nx">strings</span><span class="p">:</span><span class="nx">split</span><span class="p">(</span><span class="nx">people</span><span class="p">[</span><span class="nx">index</span><span class="p">].</span><span class="nx">name</span><span class="p">,</span> <span class="s">&quot; &quot;</span><span class="p">);</span>
            <span class="nx">employeeJson</span><span class="p">.</span><span class="nx">first_name</span> <span class="p">=</span> <span class="nx">_temp</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
            <span class="nx">employeeJson</span><span class="p">.</span><span class="nx">last_name</span> <span class="p">=</span> <span class="nx">_temp</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
            <span class="nx">employeeJson</span><span class="p">.</span><span class="nx">age</span> <span class="p">=</span> <span class="nx">people</span><span class="p">[</span><span class="nx">index</span><span class="p">].</span><span class="nx">age</span><span class="p">;</span>
            <span class="nx">employeeJson</span><span class="p">.</span><span class="nx">address</span> <span class="p">=</span> <span class="nx">people</span><span class="p">[</span><span class="nx">index</span><span class="p">].</span><span class="nx">city</span><span class="p">;</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Accessing an invalid field that is not a field in Employee struct will give an error.
 E.g. : employeeJson.city will give an error as &ldquo;unknown field &lsquo;city&rsquo; in json with struct constraint &lsquo;Employee&rsquo;&rdquo;</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>        <span class="p">}</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Set the new employeeJson as the payload</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>        <span class="nx">messages</span><span class="p">:</span><span class="nx">setJsonPayload</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span> <span class="nx">employeeJson</span><span class="p">);</span>
        <span class="nx">reply</span> <span class="nx">m</span><span class="p">;</span>
    <span class="p">}</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  
                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>    <span class="nd">@http:resourceConfig {</span>
        <span class="nx">methods</span><span class="p">:[</span><span class="s">&quot;POST&quot;</span><span class="p">],</span>
        <span class="nx">path</span><span class="p">:</span><span class="s">&quot;/update&quot;</span>
    <span class="p">}</span>
    <span class="nd">@doc:Description {</span>
        <span class="nx">value</span><span class="p">:</span> <span class="s">&quot;Resource to update person by index which can be invoked with &quot;</span> <span class="o">+</span>
        <span class="s">&quot;/people/update?index={index}&quot;</span>
    <span class="p">}</span>
    <span class="kd">resource</span> <span class="nx">updatePerson</span> <span class="p">(</span><span class="kt">message</span> <span class="nx">m</span><span class="p">,</span> <span class="nd">@http:QueryParam{</span><span class="nx">value</span><span class="p">:</span><span class="s">&quot;index&quot;</span><span class="p">}</span>
                                      <span class="kt">int</span> <span class="nx">index</span><span class="p">)</span> <span class="p">{</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Get the json payload from the request message m</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>        <span class="kt">json</span> <span class="nx">j</span> <span class="p">=</span> <span class="nx">messages</span><span class="p">:</span><span class="nx">getJsonPayload</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span>
        <span class="k">var</span> <span class="nx">jsonPerson</span><span class="p">,</span> <span class="nx">_</span> <span class="p">=</span> <span class="p">(</span><span class="kt">json</span><span class="p">&lt;</span><span class="nx">Person</span><span class="p">&gt;)</span><span class="nx">j</span><span class="p">;</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Define an error that can be used during conversion from json to person struct.</p>

                              </td>
                              <td class="code empty leading">
                                  
                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  
                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>        <span class="nx">transform</span> <span class="p">{</span>
            <span class="nx">people</span><span class="p">[</span><span class="nx">index</span><span class="p">].</span><span class="nx">name</span><span class="p">,</span> <span class="nx">_</span> <span class="p">=</span> <span class="p">(</span><span class="kt">string</span><span class="p">)</span> <span class="nx">jsonPerson</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span>
            <span class="nx">people</span><span class="p">[</span><span class="nx">index</span><span class="p">].</span><span class="nx">age</span><span class="p">,</span> <span class="nx">_</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span> <span class="nx">jsonPerson</span><span class="p">.</span><span class="nx">age</span><span class="p">;</span>
            <span class="nx">people</span><span class="p">[</span><span class="nx">index</span><span class="p">].</span><span class="nx">city</span><span class="p">,</span> <span class="nx">_</span> <span class="p">=</span> <span class="p">(</span><span class="kt">string</span><span class="p">)</span> <span class="nx">jsonPerson</span><span class="p">.</span><span class="nx">city</span><span class="p">;</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Accessing an invalid field that is not a field in Employee struct will give an error.
 E.g. : employeeJson.address will give an error as &ldquo;unknown field &lsquo;address&rsquo; in json with struct constraint &lsquo;Person&rsquo;&rdquo;</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>        <span class="p">}</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>empty the message</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>        <span class="nx">m</span> <span class="p">=</span> <span class="p">{};</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>set the status code to 202 Accepted</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>        <span class="nx">http</span><span class="p">:</span><span class="nx">setStatusCode</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span> <span class="mi">202</span><span class="p">);</span>
        <span class="nx">reply</span> <span class="nx">m</span><span class="p">;</span>
    <span class="p">}</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  
                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>    <span class="nd">@http:resourceConfig {</span>
        <span class="nx">methods</span><span class="p">:[</span><span class="s">&quot;GET&quot;</span><span class="p">],</span>
        <span class="nx">path</span><span class="p">:</span><span class="s">&quot;/&quot;</span>
    <span class="p">}</span>
    <span class="nd">@doc:Description {</span>
        <span class="nx">value</span><span class="p">:</span> <span class="s">&quot;Get all people which can be invoked as /people/&quot;</span>
    <span class="p">}</span>
    <span class="kd">resource</span> <span class="nx">GetPeople</span> <span class="p">(</span><span class="kt">message</span> <span class="nx">m</span><span class="p">)</span> <span class="p">{</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>define empty json array</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>        <span class="kt">json</span> <span class="nx">jsonResponse</span> <span class="p">=</span> <span class="p">[];</span>
        <span class="kt">int</span> <span class="nx">index</span> <span class="p">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">while</span> <span class="p">(</span><span class="nx">index</span> <span class="p">&lt;</span> <span class="nx">people</span><span class="p">.</span><span class="nx">length</span> <span class="p">)</span> <span class="p">{</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>convert each person from people array to a json and set to the array</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>            <span class="nx">jsonResponse</span><span class="p">[</span><span class="nx">index</span><span class="p">],</span> <span class="nx">_</span> <span class="p">=</span> <span class="p">&lt;</span><span class="kt">json</span><span class="p">&gt;</span> <span class="nx">people</span><span class="p">[</span><span class="nx">index</span><span class="p">];</span>
            <span class="nx">index</span> <span class="p">=</span> <span class="nx">index</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>set the people array as the json response in the message</p>

                              </td>
                              <td class="code">
                                  <div class="highlight"><pre>        <span class="nx">messages</span><span class="p">:</span><span class="nx">setJsonPayload</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span> <span class="nx">jsonResponse</span><span class="p">);</span>
        <span class="nx">reply</span> <span class="nx">m</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>

                              </td>
                          </tr>
                          
                      </table>
					 

                      

                      <table>
                          
                          <tr>
                              <td class="docs">
                                  <p>To start the service, put the code in &ldquo;constrained-json.bal&rdquo;
 and use &ldquo;ballerina run&rdquo; command.</p>

                              </td>
                              <td class="code">
                                  <div class="highlight"><pre><span class="gp">$</span> ballerina run constrained-json.bal
<span class="go">ballerina: deploying service(s) in &#39;constrained-json.bal&#39;</span>
<span class="go">ballerina: started server connector http-9090</span>
</pre></div>

                              </td>
                          </tr>
                          
                      </table>
					 

                      

                      <table>
                          
                          <tr>
                              <td class="docs">
                                  <p>Invoke the service using &ldquo;curl&rdquo;.</p>

                              </td>
                              <td class="code empty leading">
                                  
                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Invoke the get employee resource</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre><span class="gp">$</span> curl http://localhost:9090/people/employee?index<span class="o">=</span>2
<span class="go">{&quot;first_name&quot;:&quot;John&quot;,&quot;last_name&quot;:&quot;Bernes&quot;,&quot;age&quot;:62,&quot;address&quot;</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Invoke the update person resource</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre><span class="gp">$</span> curl -H <span class="s2">&quot;Content-Type: application/json&quot;</span> -X POST -d <span class="s1">&#39;{&quot;name&quot;: &quot;John Bernes Grisham&quot;,&quot;age&quot;: 62,&quot;city&quot;: &quot;Melbourne&quot;}&#39;</span> http://localhost:9090/people/update?index<span class="o">=</span>2
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>To view all persons</p>

                              </td>
                              <td class="code">
                                  <div class="highlight"><pre><span class="gp">$</span> curl http://localhost:9090/people/
<span class="go">[{&quot;name&quot;:&quot;Ann Frank&quot;,&quot;age&quot;:30,&quot;city&quot;:&quot;London&quot;},</span>
<span class="go">{&quot;name&quot;:&quot;Tim Yank&quot;,&quot;age&quot;:20,&quot;city&quot;:&quot;New York&quot;},</span>
<span class="go">{&quot;name&quot;:&quot;John Grisham&quot;,&quot;age&quot;:25,&quot;city&quot;:&quot;Brisbane&quot;},</span>
<span class="go">{&quot;name&quot;:&quot;Sarah Paulin&quot;,&quot;age&quot;:10,&quot;city&quot;:&quot;Chicago&quot;},</span>
<span class="go">{&quot;name&quot;:&quot;Trevor Noah&quot;,&quot;age&quot;:45,&quot;city&quot;:&quot;Cape Town&quot;}]</span>
</pre></div>

                              </td>
                          </tr>
                          
                      </table>
					 

                      
                      
                      <p class="next">
                          Next example: <a href="xml">XML</a>.
                      </p>
                      

                  </div>
                  <div class="col-xs-12 col-sm-12 col-md-12 cGOfooter">
                      <p class="footer">
                          by <a href="https://twitter.com/ballerinalang">@ballerinalang</a> | <a href="mailto:ballerina-dev@googlegroups.com">feedback</a> | <a href="https://github.com/ballerinalang/ballerina/tree/master/samples/ballerina-by-example/examples/constrained-json">source</a>
                      </p>
                      <p class="attrib">
                          This site was generated using a <a href="https://github.com/mmcgrana/gobyexample/">tool</a> developed by <a href="https://twitter.com/mmcgrana">@mmcgrana</a>, licensed under <a href="https://creativecommons.org/licenses/by/2.0/">CC BY</a> / modified from original
                      </p>
                  </div>
              </div>
              
          </div>
      </div>
      <div class="row cBallerinaFooter" id="iBallerinaFooter">
      </div>
	    
  </body>
</html>
