<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta property="og:url"                content="https://ballerinalang.org" />
  <meta property="og:type"               content="article" />
  <meta property="og:title"              content="Flexible. Powerful. Beautiful." />
  <meta property="og:description"        content="Ballerina by Example is a hands-on introduction to Ballerina using annotated example programs. Check out the first example or browse the full list below. " />
  <meta property="og:image"              content="http://ballerinalang.org/img/ballerina-fb.jpg" />
    <link rel="shortcut icon" href="https://ballerinalang.org/img/favicon.ico" type="image/x-icon">
  <link rel="icon" href="https://ballerinalang.org/img/favicon.ico" type="image/x-icon">
    <title>Ballerina by Example: File API</title>
    <!--GA-->
      <script>
         (function (i, s, o, g, r, a, m) {
             i['GoogleAnalyticsObject'] = r;
             i[r] = i[r] || function () {
                 (i[r].q = i[r].q || []).push(arguments)
             }, i[r].l = 1 * new Date();
             a = s.createElement(o),
                     m = s.getElementsByTagName(o)[0];
             a.async = 1;
             a.src = g;
             m.parentNode.insertBefore(a, m)
         })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');
         
         ga('create', 'UA-92163714-1', 'auto');
         ga('send', 'pageview');
         
      </script>
      <!-- Google Tag Manager -->
      <script>(function (w, d, s, l, i) {
         w[l] = w[l] || [];
         w[l].push({'gtm.start':
                     new Date().getTime(), event: 'gtm.js'});
         var f = d.getElementsByTagName(s)[0],
                 j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : '';
         j.async = true;
         j.src =
                 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
         f.parentNode.insertBefore(j, f);
         })(window, document, 'script', 'dataLayer', 'GTM-KW2LLTW');
      </script>
      <!-- End Google Tag Manager -->
      <!-- Hotjar Tracking Code for https://ballerinalang.org/ --> 
      <script>
         (function (h, o, t, j, a, r) {
             h.hj = h.hj || function () {
                 (h.hj.q = h.hj.q || []).push(arguments)
             };
             h._hjSettings = {hjid: 442732, hjsv: 5};
             a = o.getElementsByTagName('head')[0];
             r = o.createElement('script');
             r.async = 1;
             r.src = t + h._hjSettings.hjid + j + h._hjSettings.hjsv;
             a.appendChild(r);
         })(window, document, '//static.hotjar.com/c/hotjar-', '.js?sv=');
      </script>
    
     <link href="//b.content.wso2.com/sites/all/bootstrap/css/bootstrap.css?230617" rel="stylesheet">
      <script src="//b.content.wso2.com/sites/all/bootstrap/js/jquery.js?230617"></script>
      <script src="//b.content.wso2.com/sites/all/bootstrap/js/bootstrap.js?230617"></script>
      
      <script src="//b.content.wso2.com/sites/all/ballerina/ballerina-example.js"></script>
<script  defer="defer" src="//wso2.cachefly.net/wso2/sites/all/ballerina/js/ballerina.js"></script>
    <link rel=stylesheet href="site.css">
    <link href="//fonts.googleapis.com/css?family=Cairo:200,300,400,600,700,900" rel="stylesheet">
    <link rel=stylesheet href="//b.content.wso2.com/sites/all/ballerina/ballerina-example.css">
    
    
  </head>
  <body>
        <div class="row cBallerinaNav" id="iBallerinaNavigation">

        </div>
      <div class="row cBallerinaBySampleRow">
          <div class="container cBallerinaBySampleContainer">
              <div class="example" id="file-api">
                  <div class="col-xs-11 col-sm-11 col-md-11">
                      <h2><a href="./">Ballerina by Example</a>: File API</h2>
                  </div>
                  <div class="col-xs-1 col-sm-1 col-md-1">
                      <a href="./" class="cBackButton"><img src="http://b.content.wso2.com/sites/all/ballerina/backbutton.svg"/></a>
                  </div>
                  <div class="col-xs-12 col-sm-12 col-md-12">

                      

                      <table>
                          
                          <tr>
                              <td class="docs">
                                  <p>The &lsquo;ballerina.lang.files&rsquo; package contains basic file handling functions.</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre><span class="kn">import</span> <span class="nx">ballerina</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">files</span><span class="p">;</span>
<span class="kn">import</span> <span class="nx">ballerina</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">blobs</span><span class="p">;</span>
<span class="kn">import</span> <span class="nx">ballerina</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">system</span><span class="p">;</span>
<span class="kn">import</span> <span class="nx">ballerina</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">strings</span><span class="p">;</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  
                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre><span class="kd">function</span> <span class="nx">main</span> <span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="nx">args</span><span class="p">)</span> <span class="p">{</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Create &lsquo;File&rsquo; struct and open for writing.</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>    <span class="nx">files</span><span class="p">:</span><span class="nx">File</span> <span class="nx">target</span> <span class="p">=</span> <span class="p">{</span><span class="nx">path</span><span class="p">:</span><span class="s">&quot;/tmp/result.txt&quot;</span><span class="p">};</span>
    <span class="nx">files</span><span class="p">:</span><span class="nx">open</span><span class="p">(</span><span class="nx">target</span><span class="p">,</span> <span class="s">&quot;w&quot;</span><span class="p">);</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Here&rsquo;s how you can write a string into a file.</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>    <span class="kt">blob</span> <span class="nx">content</span> <span class="p">=</span> <span class="nx">strings</span><span class="p">:</span><span class="nx">toBlob</span><span class="p">(</span><span class="s">&quot;Sample Content&quot;</span><span class="p">,</span> <span class="s">&quot;utf-8&quot;</span><span class="p">);</span>
    <span class="nx">files</span><span class="p">:</span><span class="nx">write</span><span class="p">(</span><span class="nx">content</span><span class="p">,</span> <span class="nx">target</span><span class="p">);</span>
    <span class="nx">system</span><span class="p">:</span><span class="nb">println</span><span class="p">(</span><span class="s">&quot;file written: /tmp/result.txt&quot;</span><span class="p">);</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Close the file once done</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>    <span class="nx">files</span><span class="p">:</span><span class="nx">close</span><span class="p">(</span><span class="nx">target</span><span class="p">);</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Check whether the file exists.</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>    <span class="kt">boolean</span> <span class="nx">b</span> <span class="p">=</span> <span class="nx">files</span><span class="p">:</span><span class="nx">exists</span><span class="p">(</span><span class="nx">target</span><span class="p">);</span>
    <span class="nx">system</span><span class="p">:</span><span class="nb">println</span><span class="p">(</span><span class="s">&quot;file existence: &quot;</span> <span class="o">+</span> <span class="nx">b</span><span class="p">);</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Open file in read mode. Returns the content as blob and the number of bytes read</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>    <span class="nx">files</span><span class="p">:</span><span class="nx">open</span><span class="p">(</span><span class="nx">target</span><span class="p">,</span> <span class="s">&quot;r&quot;</span><span class="p">);</span>
    <span class="k">var</span> <span class="nx">content</span><span class="p">,</span> <span class="nx">n</span> <span class="p">=</span> <span class="nx">files</span><span class="p">:</span><span class="nx">read</span><span class="p">(</span><span class="nx">target</span><span class="p">,</span> <span class="mi">100000</span><span class="p">);</span>
    <span class="kt">string</span> <span class="nx">s</span> <span class="p">=</span> <span class="nx">blobs</span><span class="p">:</span><span class="nx">toString</span><span class="p">(</span><span class="nx">content</span><span class="p">,</span> <span class="s">&quot;utf-8&quot;</span><span class="p">);</span>
    <span class="nx">system</span><span class="p">:</span><span class="nb">println</span><span class="p">(</span><span class="s">&quot;file content: &quot;</span> <span class="o">+</span> <span class="nx">s</span><span class="p">);</span>
    <span class="nx">files</span><span class="p">:</span><span class="nx">close</span><span class="p">(</span><span class="nx">target</span><span class="p">);</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Here&rsquo;s how you can copy a file.</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>    <span class="nx">files</span><span class="p">:</span><span class="nx">File</span> <span class="nx">source</span> <span class="p">=</span> <span class="p">{</span><span class="nx">path</span><span class="p">:</span><span class="s">&quot;/tmp/result.txt&quot;</span><span class="p">};</span>
    <span class="nx">files</span><span class="p">:</span><span class="nx">File</span> <span class="nx">destination</span> <span class="p">=</span> <span class="p">{</span><span class="nx">path</span><span class="p">:</span><span class="s">&quot;/tmp/copy.txt&quot;</span><span class="p">};</span>
    <span class="nx">files</span><span class="p">:</span><span class="nx">copy</span><span class="p">(</span><span class="nx">source</span><span class="p">,</span> <span class="nx">destination</span><span class="p">);</span>
    <span class="nx">system</span><span class="p">:</span><span class="nb">println</span><span class="p">(</span><span class="s">&quot;file copied: /tmp/result.txt to /tmp/copy.txt&quot;</span><span class="p">);</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>How to delete a file.</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>    <span class="nx">files</span><span class="p">:</span><span class="nx">delete</span><span class="p">(</span><span class="nx">destination</span><span class="p">);</span>
    <span class="nx">system</span><span class="p">:</span><span class="nb">println</span><span class="p">(</span><span class="s">&quot;file deleted: /tmp/copy.txt&quot;</span><span class="p">);</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Move source file to destination</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>    <span class="nx">destination</span> <span class="p">=</span> <span class="p">{</span><span class="nx">path</span><span class="p">:</span><span class="s">&quot;/tmp/move.txt&quot;</span><span class="p">};</span>
    <span class="nx">files</span><span class="p">:</span><span class="nx">move</span><span class="p">(</span><span class="nx">source</span><span class="p">,</span> <span class="nx">destination</span><span class="p">);</span>
    <span class="nx">system</span><span class="p">:</span><span class="nb">println</span><span class="p">(</span><span class="s">&quot;file moved: /tmp/result.txt to /tmp/move.txt&quot;</span><span class="p">);</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  
                              </td>
                              <td class="code">
                                  <div class="highlight"><pre>    <span class="nx">files</span><span class="p">:</span><span class="nx">delete</span><span class="p">(</span><span class="nx">destination</span><span class="p">);</span>
    <span class="nx">system</span><span class="p">:</span><span class="nb">println</span><span class="p">(</span><span class="s">&quot;file deleted: /tmp/move.txt&quot;</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>

                              </td>
                          </tr>
                          
                      </table>


                      

                      <table>
                          
                          <tr>
                              <td class="docs">
                                  
                              </td>
                              <td class="code">
                                  <div class="highlight"><pre><span class="gp">$</span> ballerina run main file-api.bal
<span class="go">file written: /tmp/result.txt</span>
<span class="go">file existence: true</span>
<span class="go">file content: Sample Content</span>
<span class="go">file copied: /tmp/result.txt to /tmp/copy.txt</span>
<span class="go">file deleted: /tmp/copy.txt</span>
<span class="go">file moved: /tmp/result.txt to /tmp/move.txt</span>
<span class="go">file deleted: /tmp/move.txt</span>
</pre></div>

                              </td>
                          </tr>
                          
                      </table>


                      
                      
                      <p class="next">
                          Next example: <a href="try-catch-finally">Try/Catch/Finally</a>.
                      </p>
                      

                  </div>
                  <div class="col-xs-12 col-sm-12 col-md-12 cGOfooter">
                      <p class="footer">
                          by <a href="https://twitter.com/ballerinalang">@ballerinalang</a> | <a href="mailto:ballerina-dev@googlegroups.com">feedback</a> | <a href="https://github.com/ballerinalang/ballerina/tree/master/samples/ballerina-by-example/examples/file-api">source</a>
                      </p>
                      <p class="attrib">
                          This site was generated using a <a href="https://github.com/mmcgrana/gobyexample/">tool</a> developed by <a href="https://twitter.com/mmcgrana">@mmcgrana</a>, licensed under <a href="https://creativecommons.org/licenses/by/2.0/">CC BY</a> / modified from original
                      </p>
                  </div>
              </div>
              
          </div>
      </div>
      <div class="row cBallerinaFooter" id="iBallerinaFooter">
      </div>
      
  </body>
</html>
