<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Ballerina by Example: Fork/Join</title>
    <!--GA-->
      <script>
         (function (i, s, o, g, r, a, m) {
             i['GoogleAnalyticsObject'] = r;
             i[r] = i[r] || function () {
                 (i[r].q = i[r].q || []).push(arguments)
             }, i[r].l = 1 * new Date();
             a = s.createElement(o),
                     m = s.getElementsByTagName(o)[0];
             a.async = 1;
             a.src = g;
             m.parentNode.insertBefore(a, m)
         })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');
         
         ga('create', 'UA-92163714-1', 'auto');
         ga('send', 'pageview');
         
      </script>
      <!-- Google Tag Manager -->
      <script>(function (w, d, s, l, i) {
         w[l] = w[l] || [];
         w[l].push({'gtm.start':
                     new Date().getTime(), event: 'gtm.js'});
         var f = d.getElementsByTagName(s)[0],
                 j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : '';
         j.async = true;
         j.src =
                 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
         f.parentNode.insertBefore(j, f);
         })(window, document, 'script', 'dataLayer', 'GTM-KW2LLTW');
      </script>
      <!-- End Google Tag Manager -->
      <!-- Hotjar Tracking Code for https://ballerinalang.org/ --> 
      <script>
         (function (h, o, t, j, a, r) {
             h.hj = h.hj || function () {
                 (h.hj.q = h.hj.q || []).push(arguments)
             };
             h._hjSettings = {hjid: 442732, hjsv: 5};
             a = o.getElementsByTagName('head')[0];
             r = o.createElement('script');
             r.async = 1;
             r.src = t + h._hjSettings.hjid + j + h._hjSettings.hjsv;
             a.appendChild(r);
         })(window, document, '//static.hotjar.com/c/hotjar-', '.js?sv=');
      </script>
    
     <link href="https://b.content.wso2.com/sites/all/bootstrap/css/bootstrap.css?230617" rel="stylesheet">
      <script src="https://b.content.wso2.com/sites/all/bootstrap/js/jquery.js?230617"></script>
      <script src="https://b.content.wso2.com/sites/all/bootstrap/js/bootstrap.js?230617"></script>
      
      <script src="http://b.content.wso2.com/sites/all/ballerina/ballerina-example.js"></script>
<script  defer="defer" src="https://wso2.cachefly.net/wso2/sites/all/ballerina/js/ballerina.js"></script>
<!--      <link rel=stylesheet href="https://ballerinalang.org/css/ballerina.css?230617">-->
    <link rel=stylesheet href="site.css">
    <link href="https://fonts.googleapis.com/css?family=Cairo:200,300,400,600,700,900" rel="stylesheet">
    <link rel=stylesheet href="http://b.content.wso2.com/sites/all/ballerina/ballerina-example.css">
    
    
  </head>
  <body>
        <div class="row cBallerinaNav" id="iBallerinaNavigation">

        </div>
      <div class="row cBallerinaBySampleRow">
          <div class="container cBallerinaBySampleContainer">
              <div class="example" id="fork-join">
                  <div class="col-xs-11 col-sm-11 col-md-11">
                      <h2><a href="./">Ballerina by Example</a>: Fork/Join</h2>
                  </div>
                  <div class="col-xs-1 col-sm-1 col-md-1">
                      <a href="./" class="cBackButton"><img src="http://b.content.wso2.com/sites/all/ballerina/backbutton.svg"/></a>
                  </div>
                  <div class="col-xs-12 col-sm-12 col-md-12">

                      

                      <table>
                          
                          <tr>
                              <td class="docs">
                                  <p>A fork statement allows one to replicate a message to any number of parallel workers and have them
independently operate on the copies of the message.
The join part of the fork statement allows one to define how the caller of fork will wait for the parallel workers to complete.</p>

                              </td>
                              <td class="code leading">
                                  
                                  <div class="highlight"><pre><span class="kn">import</span> <span class="nx">ballerina</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">system</span><span class="p">;</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  
                              </td>
                              <td class="code leading">
                                  
                                  <div class="highlight"><pre><span class="kd">function</span> <span class="nx">main</span> <span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="nx">args</span><span class="p">)</span> <span class="p">{</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>fork-join allows developers to spawn(fork) multiple workers within a ballerina program and join
the results from those workers and execute code on joined results.</p>

                              </td>
                              <td class="code leading">
                                  
                                  <div class="highlight"><pre>    <span class="k">fork</span> <span class="p">{</span>
        <span class="kd">worker</span> <span class="nx">w1</span> <span class="p">{</span>
            <span class="kt">int</span> <span class="nx">i</span> <span class="p">=</span> <span class="mi">23</span><span class="p">;</span>
            <span class="kt">string</span> <span class="nx">s</span> <span class="p">=</span> <span class="s">&quot;Colombo&quot;</span><span class="p">;</span>
            <span class="nx">system</span><span class="p">:</span><span class="nb">println</span><span class="p">(</span><span class="s">&quot;[w1] i: &quot;</span> <span class="o">+</span> <span class="nx">i</span> <span class="o">+</span> <span class="s">&quot; s: &quot;</span> <span class="o">+</span> <span class="nx">s</span><span class="p">);</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Reply to the join block from worker w1.</p>

                              </td>
                              <td class="code leading">
                                  
                                  <div class="highlight"><pre>            <span class="nx">i</span><span class="p">,</span> <span class="nx">s</span> <span class="o">-&gt;</span> <span class="k">fork</span><span class="p">;</span>
        <span class="p">}</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  
                              </td>
                              <td class="code leading">
                                  
                                  <div class="highlight"><pre>        <span class="kd">worker</span> <span class="nx">w2</span> <span class="p">{</span>
            <span class="kt">float</span> <span class="nx">f</span> <span class="p">=</span> <span class="mf">10.344</span><span class="p">;</span>
            <span class="nx">system</span><span class="p">:</span><span class="nb">println</span><span class="p">(</span><span class="s">&quot;[w2] f: &quot;</span> <span class="o">+</span> <span class="nx">f</span><span class="p">);</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Reply to the join block from worker w2.</p>

                              </td>
                              <td class="code leading">
                                  
                                  <div class="highlight"><pre>            <span class="nx">f</span> <span class="o">-&gt;</span> <span class="k">fork</span><span class="p">;</span>
        <span class="p">}</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  
                              </td>
                              <td class="code leading">
                                  
                                  <div class="highlight"><pre>    <span class="p">}</span> <span class="k">join</span> <span class="p">(</span><span class="nx">all</span><span class="p">)</span> <span class="p">(</span><span class="kt">map</span> <span class="nx">results</span><span class="p">)</span> <span class="p">{</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Here we use &ldquo;all&rdquo; as the join condition which means wait for all the workers.
When the join condition has been satisfied, results &lsquo;map&rsquo; will be filled with
the returned messages from the workers.</p>

                              </td>
                              <td class="code leading">
                                  
                                  <div class="highlight"><pre>        
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Get values received from worker &lsquo;w1&rsquo;.</p>

                              </td>
                              <td class="code leading">
                                  
                                  <div class="highlight"><pre>        <span class="k">var</span> <span class="nx">resW1</span><span class="p">,</span> <span class="nx">_</span> <span class="p">=</span> <span class="p">(</span><span class="kt">any</span><span class="p">[])</span><span class="nx">results</span><span class="p">[</span><span class="s">&quot;w1&quot;</span><span class="p">];</span>
        <span class="k">var</span> <span class="nx">iW1</span><span class="p">,</span> <span class="nx">_</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="nx">resW1</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
        <span class="k">var</span> <span class="nx">sW1</span><span class="p">,</span> <span class="nx">_</span> <span class="p">=</span> <span class="p">(</span><span class="kt">string</span><span class="p">)</span><span class="nx">resW1</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
        <span class="nx">system</span><span class="p">:</span><span class="nb">println</span><span class="p">(</span><span class="s">&quot;[join-block] iW1: &quot;</span> <span class="o">+</span> <span class="nx">iW1</span> <span class="o">+</span> <span class="s">&quot; sW1: &quot;</span> <span class="o">+</span> <span class="nx">sW1</span><span class="p">);</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Get values received from worker &lsquo;w2&rsquo;.</p>

                              </td>
                              <td class="code">
                                  
                                  <div class="highlight"><pre>        <span class="k">var</span> <span class="nx">resW2</span><span class="p">,</span> <span class="nx">_</span> <span class="p">=</span> <span class="p">(</span><span class="kt">any</span><span class="p">[])</span><span class="nx">results</span><span class="p">[</span><span class="s">&quot;w2&quot;</span><span class="p">];</span>
        <span class="k">var</span> <span class="nx">fW2</span><span class="p">,</span> <span class="nx">_</span> <span class="p">=</span> <span class="p">(</span><span class="kt">float</span><span class="p">)</span><span class="nx">resW2</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
        <span class="nx">system</span><span class="p">:</span><span class="nb">println</span><span class="p">(</span><span class="s">&quot;[join-block] fW2: &quot;</span> <span class="o">+</span> <span class="nx">fW2</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>

                              </td>
                          </tr>
                          
                      </table>


                      

                      <table>
                          
                          <tr>
                              <td class="docs">
                                  
                              </td>
                              <td class="code">
                                  
                                  <div class="highlight"><pre><span class="gp">$</span> ballerina run main fork-join.bal
<span class="go">[w1] i: 23 s: Colombo</span>
<span class="go">[w2] f: 10.344</span>
<span class="go">[join-block] iW1: 23 sW1: Colombo</span>
<span class="go">[join-block] fW2: 10.344</span>
</pre></div>

                              </td>
                          </tr>
                          
                      </table>


                      
                      
                      <p class="next">
                          Next example: <a href="fork-join-condition-some">Fork/Join Condition Some</a>.
                      </p>
                      

                  </div>
                  <div class="col-xs-12 col-sm-12 col-md-12 cGOfooter">
                      <p class="footer">
                          by <a href="https://twitter.com/ballerinalang">@ballerinalang</a> | <a href="mailto:ballerina-dev@googlegroups.com">feedback</a> | <a href="https://github.com/ballerinalang/ballerina/tree/ballerina-by-example-src/samples/ballerina-by-example/examples/fork-join">source</a>
                      </p>
                      <p class="attrib">
                          This site was generated using a <a href="https://github.com/mmcgrana/gobyexample/">tool</a> developed by <a href="https://twitter.com/mmcgrana">@mmcgrana</a>, licensed under <a href="https://creativecommons.org/licenses/by/2.0/">CC BY</a> / modified from original
                      </p>
                  </div>
              </div>
              
          </div>
      </div>
      <div class="row cBallerinaFooter" id="iBallerinaFooter">
      </div>
      
  </body>
</html>
