<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta property="og:url"                content="https://ballerinalang.org" />
  <meta property="og:type"               content="article" />
  <meta property="og:title"              content="Flexible. Powerful. Beautiful." />
  <meta property="og:description"        content="Ballerina by Example is a hands-on introduction to Ballerina using annotated example programs. Check out the first example or browse the full list below. " />
  <meta property="og:image"              content="http://ballerinalang.org/img/ballerina-fb.jpg" />
    <link rel="shortcut icon" href="https://ballerinalang.org/img/favicon.ico" type="image/x-icon">
  <link rel="icon" href="https://ballerinalang.org/img/favicon.ico" type="image/x-icon">
    <title>Ballerina by Example: XML To JSON Conversion</title>
    <!--GA-->
      <script>
         (function (i, s, o, g, r, a, m) {
             i['GoogleAnalyticsObject'] = r;
             i[r] = i[r] || function () {
                 (i[r].q = i[r].q || []).push(arguments)
             }, i[r].l = 1 * new Date();
             a = s.createElement(o),
                     m = s.getElementsByTagName(o)[0];
             a.async = 1;
             a.src = g;
             m.parentNode.insertBefore(a, m)
         })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');
         
         ga('create', 'UA-92163714-1', 'auto');
         ga('send', 'pageview');
         
      </script>
      <!-- Google Tag Manager -->
      <script>(function (w, d, s, l, i) {
         w[l] = w[l] || [];
         w[l].push({'gtm.start':
                     new Date().getTime(), event: 'gtm.js'});
         var f = d.getElementsByTagName(s)[0],
                 j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : '';
         j.async = true;
         j.src =
                 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
         f.parentNode.insertBefore(j, f);
         })(window, document, 'script', 'dataLayer', 'GTM-KW2LLTW');
      </script>
      <!-- End Google Tag Manager -->
      <!-- Hotjar Tracking Code for https://ballerinalang.org/ --> 
      <script>
         (function (h, o, t, j, a, r) {
             h.hj = h.hj || function () {
                 (h.hj.q = h.hj.q || []).push(arguments)
             };
             h._hjSettings = {hjid: 442732, hjsv: 5};
             a = o.getElementsByTagName('head')[0];
             r = o.createElement('script');
             r.async = 1;
             r.src = t + h._hjSettings.hjid + j + h._hjSettings.hjsv;
             a.appendChild(r);
         })(window, document, '//static.hotjar.com/c/hotjar-', '.js?sv=');
      </script>
    
     <link href="https://b.content.wso2.com/sites/all/bootstrap/css/bootstrap.css?230617" rel="stylesheet">
      <script src="https://b.content.wso2.com/sites/all/bootstrap/js/jquery.js?230617"></script>
      <script src="https://b.content.wso2.com/sites/all/bootstrap/js/bootstrap.js?230617"></script>
      
      <script src="https://b.content.wso2.com/sites/all/ballerina/ballerina-example.js"></script>
<script  defer="defer" src="https://wso2.cachefly.net/wso2/sites/all/ballerina/js/ballerina.js"></script>
    <link rel=stylesheet href="site.css">
    <link href="https://fonts.googleapis.com/css?family=Cairo:200,300,400,600,700,900" rel="stylesheet">
    <link rel=stylesheet href="https://b.content.wso2.com/sites/all/ballerina/ballerina-example.css">
    
    
  </head>
  <body>
        <div class="row cBallerinaNav" id="iBallerinaNavigation">

        </div>
      <div class="row cBallerinaBySampleRow">
          <div class="container cBallerinaBySampleContainer">
			  <div class="FullCode">
			  	<div class="highlight"><pre><span class="kn">import</span> <span class="nx">ballerina</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">system</span><span class="p">;</span>
<span class="kn">import</span> <span class="nx">ballerina</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">xmls</span><span class="p">;</span><span class="kd">function</span> <span class="nx">main</span> <span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="nx">args</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">xml</span> <span class="nx">x</span> <span class="p">=</span> <span class="nx">xmls</span><span class="p">:</span><span class="nb">parse</span><span class="p">(</span><span class="s">&quot;&lt;h:Store id = \&quot;AST\&quot; xmlns:h=\&quot;http://www.test.com\&quot;&gt;&quot;</span> <span class="o">+</span>
                     <span class="s">&quot;&lt;h:name&gt;Anne&lt;/h:name&gt;&quot;</span> <span class="o">+</span>
                     <span class="s">&quot;&lt;h:address&gt;&lt;h:street&gt;Main&lt;/h:street&gt;&quot;</span> <span class="o">+</span>
                     <span class="s">&quot;&lt;h:city&gt;94&lt;/h:city&gt;&lt;/h:address&gt;&quot;</span> <span class="o">+</span>
                     <span class="s">&quot;&lt;h:code&gt;&lt;h:item&gt;4&lt;/h:item&gt;&lt;h:item&gt;8&lt;/h:item&gt;&lt;/h:code&gt;&quot;</span> <span class="o">+</span>
                        <span class="s">&quot;&lt;/h:Store&gt;&quot;</span><span class="p">);</span>
    <span class="nx">xmls</span><span class="p">:</span><span class="nx">Options</span> <span class="nx">options1</span> <span class="p">=</span> <span class="p">{};</span>
    <span class="kt">json</span> <span class="nx">j1</span> <span class="p">=</span> <span class="nx">xmls</span><span class="p">:</span><span class="nx">toJSON</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">options1</span><span class="p">);</span>
    <span class="nx">system</span><span class="p">:</span><span class="nb">println</span><span class="p">(</span><span class="nx">j1</span><span class="p">);</span>
    <span class="nx">xmls</span><span class="p">:</span><span class="nx">Options</span> <span class="nx">options2</span> <span class="p">=</span> <span class="p">{</span><span class="nx">attributePrefix</span> <span class="p">:</span> <span class="s">&quot;#&quot;</span><span class="p">,</span> <span class="nx">preserveNamespaces</span> <span class="p">:</span> <span class="kc">false</span><span class="p">};</span>
    <span class="kt">json</span> <span class="nx">j2</span> <span class="p">=</span> <span class="nx">xmls</span><span class="p">:</span><span class="nx">toJSON</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">options2</span><span class="p">);</span>
    <span class="nx">system</span><span class="p">:</span><span class="nb">println</span><span class="p">(</span><span class="nx">j2</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>

		  	  </div>	
              <div class="example" id="xml-to-json-conversion">
                  <div class="col-xs-11 col-sm-11 col-md-11">
                      <h2><a href="./">Ballerina by Example</a>: XML To JSON Conversion</h2>
                  </div>
                  <div class="col-xs-1 col-sm-1 col-md-1">
                      <a href="./" class="cBackButton"><img src="http://b.content.wso2.com/sites/all/ballerina/backbutton.svg"/></a>
                  </div>
                  <div class="col-xs-12 col-sm-12 col-md-12">

                      

                      <table>
                          
                          <tr>
                              <td class="docs">
                                  <p>XML to JSON conversion can be done using xmls:toJSON function. This function takes
the XML to be converted and struct of options as arguments. The options
struct has two fields, attributePrefix which is the prefix to add to the key,
to identify a XML attribute and namespaces where default value is &lsquo;@&rsquo;. And
preserveNamespaces to indicate whether to preserve namespace prefixes when
converting or not.</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre><span class="kn">import</span> <span class="nx">ballerina</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">system</span><span class="p">;</span>
<span class="kn">import</span> <span class="nx">ballerina</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">xmls</span><span class="p">;</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  
                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre><span class="kd">function</span> <span class="nx">main</span> <span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="nx">args</span><span class="p">)</span> <span class="p">{</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Create a XML.</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>    <span class="kt">xml</span> <span class="nx">x</span> <span class="p">=</span> <span class="nx">xmls</span><span class="p">:</span><span class="nb">parse</span><span class="p">(</span><span class="s">&quot;&lt;h:Store id = \&quot;AST\&quot; xmlns:h=\&quot;http://www.test.com\&quot;&gt;&quot;</span> <span class="o">+</span>
                     <span class="s">&quot;&lt;h:name&gt;Anne&lt;/h:name&gt;&quot;</span> <span class="o">+</span>
                     <span class="s">&quot;&lt;h:address&gt;&lt;h:street&gt;Main&lt;/h:street&gt;&quot;</span> <span class="o">+</span>
                     <span class="s">&quot;&lt;h:city&gt;94&lt;/h:city&gt;&lt;/h:address&gt;&quot;</span> <span class="o">+</span>
                     <span class="s">&quot;&lt;h:code&gt;&lt;h:item&gt;4&lt;/h:item&gt;&lt;h:item&gt;8&lt;/h:item&gt;&lt;/h:code&gt;&quot;</span> <span class="o">+</span>
                        <span class="s">&quot;&lt;/h:Store&gt;&quot;</span><span class="p">);</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Convert to JSON with default attribute prefix and with namespaces.</p>

                              </td>
                              <td class="code leading">
                                  <div class="highlight"><pre>    <span class="nx">xmls</span><span class="p">:</span><span class="nx">Options</span> <span class="nx">options1</span> <span class="p">=</span> <span class="p">{};</span>
    <span class="kt">json</span> <span class="nx">j1</span> <span class="p">=</span> <span class="nx">xmls</span><span class="p">:</span><span class="nx">toJSON</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">options1</span><span class="p">);</span>
    <span class="nx">system</span><span class="p">:</span><span class="nb">println</span><span class="p">(</span><span class="nx">j1</span><span class="p">);</span>
</pre></div>

                              </td>
                          </tr>
                          
                          <tr>
                              <td class="docs">
                                  <p>Convert to JSON with custom attribute prefix and without namespaces.</p>

                              </td>
                              <td class="code">
                                  <div class="highlight"><pre>    <span class="nx">xmls</span><span class="p">:</span><span class="nx">Options</span> <span class="nx">options2</span> <span class="p">=</span> <span class="p">{</span><span class="nx">attributePrefix</span> <span class="p">:</span> <span class="s">&quot;#&quot;</span><span class="p">,</span> <span class="nx">preserveNamespaces</span> <span class="p">:</span> <span class="kc">false</span><span class="p">};</span>
    <span class="kt">json</span> <span class="nx">j2</span> <span class="p">=</span> <span class="nx">xmls</span><span class="p">:</span><span class="nx">toJSON</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">options2</span><span class="p">);</span>
    <span class="nx">system</span><span class="p">:</span><span class="nb">println</span><span class="p">(</span><span class="nx">j2</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>

                              </td>
                          </tr>
                          
                      </table>
					 

                      

                      <table>
                          
                          <tr>
                              <td class="docs">
                                  
                              </td>
                              <td class="code">
                                  <div class="highlight"><pre><span class="gp">$</span> ballerina run xml-to-json-conversion.bal
<span class="go">{&quot;h:Store&quot;:{&quot;@xmlns:h&quot;:&quot;http://www.test.com&quot;,&quot;@id&quot;:&quot;AST&quot;,&quot;h:name&quot;:&quot;Anne&quot;,</span>
<span class="go">&quot;h:address&quot;:{&quot;h:street&quot;:&quot;Main&quot;,&quot;h:city&quot;:&quot;94&quot;},&quot;h:code&quot;:{&quot;h:item&quot;:[&quot;4&quot;,&quot;8&quot;]}}}</span>
<span class="go">{&quot;Store&quot;:{&quot;#id&quot;:&quot;AST&quot;,&quot;name&quot;:&quot;Anne&quot;,&quot;address&quot;:{&quot;street&quot;:&quot;Main&quot;,&quot;city&quot;:&quot;94&quot;},</span>
<span class="go">&quot;code&quot;:{&quot;item&quot;:[&quot;4&quot;,&quot;8&quot;]}}}</span>
</pre></div>

                              </td>
                          </tr>
                          
                      </table>
					 

                      
                      
                      <p class="next">
                          Next example: <a href="worker">Worker</a>.
                      </p>
                      

                  </div>
                  <div class="col-xs-12 col-sm-12 col-md-12 cGOfooter">
                      <p class="footer">
                          by <a href="https://twitter.com/ballerinalang">@ballerinalang</a> | <a href="mailto:ballerina-dev@googlegroups.com">feedback</a> | <a href="https://github.com/ballerinalang/ballerina/tree/master/samples/ballerina-by-example/examples/xml-to-json-conversion">source</a>
                      </p>
                      <p class="attrib">
                          This site was generated using a <a href="https://github.com/mmcgrana/gobyexample/">tool</a> developed by <a href="https://twitter.com/mmcgrana">@mmcgrana</a>, licensed under <a href="https://creativecommons.org/licenses/by/2.0/">CC BY</a> / modified from original
                      </p>
                  </div>
              </div>
              
          </div>
      </div>
      <div class="row cBallerinaFooter" id="iBallerinaFooter">
      </div>
	    
  </body>
</html>
